name: my-menu-app deploy to Amazon ECS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-menu-app-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            --build-arg RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }} \
            --build-arg RDS_PORT=${{ secrets.RDS_PORT }} \
            --build-arg RDS_DB_NAME=${{ secrets.RDS_DB_NAME }} \
            --build-arg RDS_USERNAME=${{ secrets.RDS_APP_USER }} \
            --build-arg RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} \
          ã€€-t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          
      - name: Render Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/task-def-api.json
          container-name: my-menu-app-sb
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: "LOG_LEVEL=info"

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          service: my-menu-app-service
          cluster: my-menu-app-cluster
          wait-for-service-stability: true